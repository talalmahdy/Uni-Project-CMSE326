#include<iostream>
#include<stdio.h>
#include<time.h>
#define N 10000
using namespace std;

int finished=0;
int t;
void updatejarr(int jarr[],int size)
{
	if(size==0)
	{
		finished=1;
		return;
	}
	if(t==3)
	{
	if(jarr[size-1]==4)
	{
		jarr[size-1]=0;
		updatejarr(jarr,size-1);
	}
	else
	jarr[size-1]++;
	}

	else //t==4
	{
	if(jarr[size-1]==6)
	{
		jarr[size-1]=0;
		updatejarr(jarr,size-1);
	}
	else
	jarr[size-1]++;
	}	
}
/////////////////////////// MAIN ///////////////////////////////// MAIN ////////////////////////////////////// MAIN /////////////////////////////////
int main()
{
	int choice;
	int n, i, j, k, p, counter=0, error=0, errorchoice=0;
	int a,b,c; //inputs/outputs
	int *jarr;
	int **mat;
	float totalerror;
	char string[20];
	char str[N], buffer1[N],buffer2[N],buffer3[N];
	FILE *inputs,*output,*report;

	time_t current_time; //to print the date and time in the report
    char* c_time_string;
	current_time = time(NULL);
	c_time_string = ctime(&current_time);

	report=fopen("report.txt","w");
	fprintf(report,"Report generated on %s\n",c_time_string);

	cout<<"Welcome to Software Boundary Value Testing Tool (SBVTT)\n";
	do
	{
		counter=0;
		cout<<"\nWhat do you want to do?\n1. Generate Test Cases (inputs.txt)\n2. Generate outputs (outputs.txt)\n";
		cout<<"3. Test the programs by verifying the outputs\n4. Exit and save report (report.txt)\n";
		cin>>choice;
	
		if(choice==1)
		{
			inputs = fopen("inputs.txt","w");

			fprintf(report,"The user chose to generate input variables and store them in inputs.txt\n");
			cout<<"How many input variables does your program contain? ";
			cin>>n;
			cout<<endl;	
			fprintf(report,"The user's program contained %d variables\n",n);
	
			do
			{
				cout<<endl<<"Choose a testing method from the following: \n";
				cout<<"1. Normal Boundary Value Testing\n2. Robust Boundary Value Testing\n3. Worst Case Normal Boundary Value Testing\n4. Worst Case Robust Boundary Value Testing\n";
				cin>>t;
				if(t!=1 && t!=2 && t!=3 && t!=4)
					cout<<"Please choose a testing method from 1-4\n";
			}while(t!=1 && t!=2 && t!=3 && t!=4); //t<1 || t>4
	
////////////////////// INPUT VARIABLES //////////////////////////// INPUT VARIABLES //////////////////////////// INPUT VARIABLES /////////////////////////

		cout<<"Enter minimum and maximum input values for your "<<n<<" variables\n";
		if(t==1)
		{
			fprintf(report,"The user chose to test his program using the Normal Boundary Value Testing method\n");
			mat=new int*[n];
			for(i=0;i<n;i++)
				mat[i]=new int[5];
			for(i=0;i<n;i++)
			{
				cout<<"Variable "<<i+1<<": ";
				cin>>mat[i][0]>>mat[i][4];
				mat[i][1]=mat[i][0]+1;
				mat[i][3]=mat[i][4]-1;
				mat[i][2]=(mat[i][0]+mat[i][4])/2;
			}
		}
		if(t==2)
		{
			fprintf(report,"The user chose to test his program using the Robust Boundary Value Testing method\n");
			mat=new int*[n];
			for(i=0;i<n;i++)
				mat[i]=new int[7];
			for(i=0;i<n;i++)
			{
				cout<<"Variable "<<i+1<<": ";
				cin>>mat[i][1]>>mat[i][5];
				mat[i][2]=mat[i][1]+1;
				mat[i][4]=mat[i][5]-1;
				mat[i][3]=(mat[i][1]+mat[i][5])/2;
				mat[i][0]=mat[i][1]-1;
				mat[i][6]=mat[i][5]+1;
			}
		}
		if(t==3)
		{
			fprintf(report,"The user chose to test his program using the Worst Case Normal Boundary Value Testing method\n");
			jarr=new int[n];
			for(i=0;i<n;i++)
				jarr[i]=0;
			mat=new int*[n];
			for(i=0;i<n;i++)
				mat[i]=new int[5];
			for(i=0;i<n;i++)
			{
				cout<<"Variable "<<i+1<<": ";
				cin>>mat[i][0]>>mat[i][4];
				mat[i][1]=mat[i][0]+1;
				mat[i][3]=mat[i][4]-1;
				mat[i][2]=(mat[i][0]+mat[i][4])/2;
			}
		}
		if(t==4)
		{
			fprintf(report,"The user chose to test his program using the Worst Case Robust Boundary Value Testing method\n");
			jarr=new int[n];
			for(i=0;i<n;i++)
				jarr[i]=0;
			mat=new int*[n];
			for(i=0;i<n;i++)
				mat[i]=new int[7];
			for(i=0;i<n;i++)
			{
				cout<<"Variable "<<i+1<<": ";
				cin>>mat[i][1]>>mat[i][5];
				mat[i][2]=mat[i][1]+1;
				mat[i][4]=mat[i][5]-1;
				mat[i][3]=(mat[i][1]+mat[i][5])/2;
				mat[i][0]=mat[i][1]-1;
				mat[i][6]=mat[i][5]+1;
			}
		}

//////////////// GENERATE TEST CASES ////////////////////////// GENERATE TEST CASES //////////////////// GENERATE TEST CASES ////////////////////////

		cout<<"Generating test cases for your chosen test method...\nThe test cases will be saved as a text file in the project folder as 'inputs.txt'\n";
		if(t==1)
		{
			for(i=0;i<n;i++)
			{
				for(j=0;j<5;j++)
				{
					for(k=0;k<n;k++)
					{
						if(k==i)
							fprintf(inputs,"%d", mat[k][j]);
						else
							fprintf(inputs,"%d", mat[k][2]);
						fprintf(inputs," " );
					}
					fprintf(inputs,"\n" );
					counter++;
				}	
			}
		}
		if(t==2)
		{
			for(i=0;i<n;i++)
			{
				for(j=0;j<7;j++)
				{
					for(k=0;k<n;k++)
					{
						if(k==i)
							fprintf(inputs,"%d", mat[k][j]);
						else
							fprintf(inputs,"%d", mat[k][3]);
						fprintf(inputs," " );
					}
					fprintf(inputs,"\n" );
					counter++;
				}	
			}
		}
	
		if(t==3)
		{	
			while(!finished)
			{
				for(i=0;i<n;i++)
				{
					j=jarr[i];
					fprintf(inputs,"%d ", mat[i][j]);
				}
				updatejarr(jarr,n);
				counter++;
				if(!finished)fprintf(inputs,"\n" );
			}
		}

		if(t==4)
		{
			while(!finished)
			{
				for(i=0;i<n;i++)
				{
					j=jarr[i];
					fprintf(inputs,"%d ", mat[i][j]);
				}
				updatejarr(jarr,n);
				counter++;
				if(!finished)fprintf(inputs,"\n" );
			}
		}
		cout<<"Number of test cases: "<<counter<<endl;
		fprintf(report,"%d Test cases were generated by the user and stored in inputs.txt\n",counter);
		fclose(inputs);
	}

/////////////////// GENERATING OUTPUTS ////////////////////// GENERATING OUTPUTS ////////////////////// GENERATING OUTPUTS ///////////////////////////

		else if(choice==2)  
		{	
			output=fopen("outputs.txt","w"); //clearing the output file before generating
			fclose(output);
			inputs=fopen("inputs.txt","r");

			do
			{
				cout<<endl<<"Choose a program to be tested from the following: \n";
				cout<<"1. Next date program\n2. Day of week program\n3. Triangle Program\n";
				cin>>p;
				if(p!=1 && p!=2 && p!=3)
				cout<<"Please choose a program from 1-3\n";
			}while(p!=1 && p!=2 && p!=3);
	
			cout<<"Generating the outputs based on your chosen program and the inputs.txt file. They'll be saved as outputs.txt in the project folder\n";
			
			do
			{
				fscanf(inputs,"%d %d %d", &a,&b,&c);
				itoa(a,buffer1,10); //converting int to const char*
				itoa(b,buffer2,10);
				itoa(c,buffer3,10);
				if(p==1)
					strcpy(str,"nextdate.exe 3 ");
				if(p==2)
					strcpy(str,"dayofweek.exe 3 ");
				if(p==3)
					strcpy(str,"triangle.exe 3 ");
				strcat(str,buffer1);
				strcat(str," ");
				strcat(str,buffer2);
				strcat(str," ");
				strcat(str,buffer3);
				system(str);         //executing the program //using argc and argv to send inputs to the programs
				memset(&buffer1[0], 0, sizeof(buffer1)); //setting all elements in the string to 0
				memset(&buffer2[0], 0, sizeof(buffer2));
				memset(&buffer3[0], 0, sizeof(buffer3));
			}while(feof(inputs)==0);

			fprintf(report,"The outputs of input.txt file were generated by the user and stored in outputs.txt\n");
			fclose(inputs);
		}
			

//////////////// OUTPUT VALIDATION ////////////////// OUTPUT VALIDATION //////////////////////// OUTPUT VALIDATION //////////////////////////////////
	
		else if(choice==3)
		{
			inputs=fopen("inputs.txt","r");
			output=fopen("outputs.txt","r");
			cout<<"Now we have a ready to use input and output files. Let us confirm if the outputs are correct.\n";
			cout<<"Please click 1 if the displayed output is wrong to calculate the mistakes out of all input test cases\n";
			cout<<"Press any other key if the displayed output is correct\n";
			counter=0;
			if(p==1)
			{
				do
				{
					fscanf(inputs,"%d %d %d", &a,&b,&c);
					cout<<"Input "<<counter+1<<": "<<a<<" "<<b<<" "<<c<<endl;
					fscanf(output,"%d %d %d", &a,&b,&c);
					if(a==0 && b==0 && c==0)
						cout<<"Output "<<counter+1<<": Invalid day/month/year"<<endl;
					else
						cout<<"Output "<<counter+1<<": "<<a<<" "<<b<<" "<<c<<endl;
					cin>>errorchoice;
					if(errorchoice==1)
						error++;
					counter++;
				}while(feof(inputs)==0);
				fprintf(report,"The user chose to test the nextdate program using the generated outputs\n");
			}

			if(p==2)
			{
				cout<<"1. Sunday 2. Monday 3. Tuesday 4. Wednesday 5. Thursday 6. Friday 7. Saturday\n";
				do
				{
					fscanf(inputs,"%d %d %d", &a,&b,&c);
					cout<<"Input "<<counter+1<<": "<<a<<" "<<b<<" "<<c<<endl;
					fscanf(output,"%d", &a);
					cout<<"Output "<<counter+1<<": "<<a<<endl;
					cin>>errorchoice;
					if(errorchoice==1)
						error++;
					counter++;
				}while(feof(inputs)==0);
				fprintf(report,"The user chose to test the dayofweek program using the generated outputs\n");
			}

			if(p==3)
			{
				do
				{
					fscanf(inputs,"%d %d %d", &a,&b,&c);
					cout<<"Input "<<counter+1<<": "<<a<<" "<<b<<" "<<c<<endl;
					fscanf(output,"%s", string);
					cout<<"Output "<<counter+1<<": "<<string<<endl;
					cin>>errorchoice;
					if(errorchoice==1)
						error++;
					counter++;
				}while(feof(inputs)==0);
				fprintf(report,"The user chose to test the triangle program using the generated outputs\n");
			}

			totalerror=(float)error/counter * 100;
			cout<<"Error = (number of errors discovered by user/number of test cases) * 100= ("<<error<<"/"<<counter<<") * 100 = "<<totalerror<<" %";
			fprintf(report,"The error percentage in the user's tested program is %f %\n",totalerror);
			fclose(inputs);
			fclose(output);
		}

	else if(choice==4)
		break;
	}while(1);
	
	fclose(report);
	system("pause");
	return 0;
}
